<?php //-так открывается тег PHP
?> //так тег PHP закрывается
//Все что внутри двух этих тегов- код PHP

<?php
//После двух слэшей пишется строчный комментарий
/*так пшется
многострочный комментарий
(в коде PHP выделяем объем текста и жмём ctrl+shift+/)*/

header('Content-Type: text/html; charset=utf-8');// этой записью применяем кодировку UTF-8
//нижние две строки выводят ВСЕ возникающие ошибки
error_reporting(E_ALL);
ini_set('display_errors', 1);

echo 'Hello, world!'; //echo- оператор выводв на экран
print 'Hello, world!'; //print- оператор выводв на экран
//echo и print равны и ничем не отличаются

echo <<<END
<p>Еще одна форма вывода</p>
Встречается крайне редко
END;

echo '<div><b>Hello</b>, world!</div>'; //теги HTML пишутся в строке, являются строкой
echo "<div>".
    "<b>Hello</b>, world!</div>";/* Двойные кавычки так же работают для вывода,
точка в данном случае- конкатинатор. Конкатинация- операция склеивания объектов линейной
структуры, обычно строк*/
?>

<div>За пределами тегов PHP можно писать обычный код HTML</div>

<?php
$x = 2;// $x- так обозначается переменная, тут ей присвоено значение 2
echo '<b>Hello</b>, world!'.$x;//конкатинатор вне одинарных кавычек добавит к строке переменную
echo "<div><b>Hello</b>, world!$x</div>";//внутри двойных кавчек можно писать переменную, ели следующий символ отсутствует
echo "<div><b>Hello</b>, world!{$x}yz</div>";//в двойных кавычках переменную в тескте нужно писать в фигурных скобках
echo '<div><b>Hello</b>, world!$x</div>';//в одинарных кавычках переменная не обрабатывается, выводится как "$x"
$flag_1 = true;// boolean- типа данных (принимает значения либо true либо false)
$flag_2 = false;
$result = $flag_1 + $flag_2;
$pi = 3.141593;// float- тип данных, float- число с плавающей точкой
$x = 2;// integer- тип данных, integer- целое число
$y = $x + $pi;//integer + float = float
$z = $x + ' строка ';//результатом будет значение переменной $x
$z = $x + '2 строка ';//результатом будет сумма $x и 2
$z = $x + ' строка 2';//результатом будет значение переменной $x
$z = $x.' строка';//результатом будет значение переменной и строка
$z = $x + 0;//результатом будет значение переменной $x (строка, если есть, удалится)
$z = $x*1;//результатом будет значение переменной $x(строка, если есть, удалится наверняка)
$z += 0;//укороченная форма записи $z = $z + 0
$z++;//увеличение значения на единицу (в данном случае сначала возвращается значение потом плюсуется 1)
++$z;//увеличение значения на единицу (в данном случае сначала плюсуется 1 затемвозвращается значение)
$massiv = array(2,5,99,true,'Cant touch this');//array- массив данных;
//resource - тип данных-ссылка на файл
//NULL- тип данных- отсутствие данных
$t = 'строка';//string(строка)- тип данных
$t .='LL';//присоединение к переменной являющейся строкой указанных (LL) символов
$g = (integer)'56';//преобразование строки в тип integer
echo "Text_1 ", $z, " Text_2";//Запятая как перечислитель того что нужно вывести
?>

<div><?php echo $pi; ?></div>
<div><?php echo $y; ?></div>
<div><?php echo $z; ?></div>
<div><?php echo $t; ?></div>
<div><?php echo $result; ?></div>
<?php echo '<pre>' ?>
<div><?php print_r($massiv); ?>- print_r выводит матрицу на экран</div>
<?php echo '</pre>' ?> Тег '<pre></pre>' выводит в том же форматировании в каком писался код
<div>За пределами тега PHP необходимо открывать тег PHP чтоб вывести значени переменной<?php echo $x; ?></div>
<div><?=$x?></div> /*Можно встретить такую форму записи, но так писать не следует, это не везде работает*/

<?php
echo $massiv[2];
?>

<?php
$name = 'chislo';
$chislo = 5;

define ('PEREMENNAYA',11);// Глобальная  именованная константа

?>
<div><?php echo $name; ?> = <?php echo $$name; ?> Т.е. $$name воспринимается как $chislo = $($name)</div>
<div><?php echo $name; ?> = <?php echo "$$name"; ?> "$$name" все что в кавычках выведется строкой, текстом</div>
<div><?php echo $name; ?> = <?php echo "{$$name}"; ?> "{$$name}" все что в кавычках
                                                        и фиг-х скобках обработается и выведется значение</div>
<div><?php echo PEREMENNAYA; ?> Глобальная именованная константа</div>

<ul>
    <li><?php echo __LINE__; ?>- номер строки</li>
    <li><?php echo __FILE__; ?>- путь к файлу страницы</li>
    <li><?php echo __FUNCTION__; ?>- название текущей функции</li>
    <li><?php echo __CLASS__; ?>- название текущего класса</li>
    <li><?php echo __METHOD__; ?>- метод текущего класса</li>
    <li><?php echo PHP_VERSION; ?>- версия PHP</li>
    <li><?php echo PHP_OS; ?>- ОС на которой запущен сервер</li>
    <li><?php echo DEFAULT_INCLUDE_PATH; ?>- список путей с подключаемыми файлами</li>
</ul>

<?php

?>
